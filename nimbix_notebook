#!/bin/bash

set -e

while getopts "r:s:c:p:lu:" opt; do
    case ${opt} in
        r)
            REQUIREMENTS="${OPTARG}"
            ;;
        s)
            SCRIPT="${OPTARG}"
            ;;
        c)
            CONDA="${OPTARG}"
            ;;
        p)
            PORT="${OPTARG}"
            ;;
        l)
            LOCAL_TESTING=1
            ;;
        u)
            BASEURL="${OPTARG}"
            ;;
        *)
            echo "usage: $0 [-l]][-r <requirements-path>] [-s <script-path>]" >&2
            echo "      [-c <conda-environment>] [-p <user-port>]" >&2
            echo "  use -c to activate anaconda environment" >&2
            echo "  use -r to specify a requirements.txt file for pip" >&2
            echo "  use -s to source an activation/environment script" >&2
            echo "  use -p to specify user port for notebook" >&2
            echo "  use -u to specify base_url for notebook" >&2
            echo "  use -l for local testing w/ Docker" >&2
            exit 1
            ;;
    esac
done

# default internal Jupyter port is 5902 unless overridden
PORTNUM=${JARVICE_SERVICE_PORT:-5902}
[[ -z "${PORT}" ]] && PORT=$PORTNUM

# default base_url to '/'
[[ -z "${BASEURL}" ]] && BASEURL='/'

# fix up path as pip installs in different locations per python revision
export PATH=$PATH:/usr/local/bin

#Check for Anaconda
if [[ -e /opt/conda/etc/profile.d/conda.sh ]]; then
    CONDA_ENV="source /opt/conda/etc/profile.d/conda.sh && conda activate base && conda install -c conda-forge jupyter_contrib_nbextensions"
elif [[ -e /etc/profile.d/conda.sh ]]; then
    CONDA_ENV="source /etc/profile.d/conda.sh && conda activate base && conda install -c conda-forge jupyter_contrib_nbextensions"
fi

[[ -n "${CONDA_ENV}" ]] && eval ${CONDA_ENV}

[[ -n "${CONDA}" ]] && conda activate "${CONDA}"

# Determine pip to use for distro, always on user path
PIP=$(which pip)

[[ -n "$REQUIREMENTS" ]] && sudo ${PIP} install -r "$REQUIREMENTS"

[[ -n "$SCRIPT" ]] && source "$SCRIPT"

if [[ ! -z "${LOCAL_TESTING}" ]]; then
    # Create non-privileged user for local test
    useradd -m -s /bin/bash nimbix 2>&1 || /bin/true
    su - nimbix -c "eval ${CONDA_ENV} && jupyter notebook --ip=0.0.0.0 \
        --no-browser --port=${PORT} --NotebookApp.token='' \
        --NotebookApp.base_url=${BASEURL}"
else
    cd /data
    python3 -m qat.magics.install
    exec jupyter notebook --ip=0.0.0.0 --no-browser --port=${PORT} \
        --NotebookApp.token=`cat /etc/JARVICE/random128.txt | cut -c 1-64` \
        --NotebookApp.base_url=${BASEURL}
fi
